{
  "permissions": {
    "allow": [
      "Bash(chmod:*)",
      "Bash(source:*)",
      "Bash(blipee:*)",
      "Bash(export PATH=\"$HOME/Documents/blipee/blipee-toolpad/automation:$PATH\")",
      "Bash(grep:*)",
      "Bash(./automation/blipee:*)",
      "Bash(git --version)",
      "Bash(mkdir:*)",
      "Bash(cp:*)",
      "Bash(git init:*)",
      "Bash(git -C /Users/pedro/Documents/pedro-dev-environment add .)",
      "Bash(git -C /Users/pedro/Documents/pedro-dev-environment status)",
      "Bash(git -C /Users/pedro/Documents/pedro-dev-environment commit -m \"🚀 Initial commit: Pedro's Elite Development Environment\n\n✨ Complete one-command setup for world-class development productivity\n\nFeatures:\n- 🛠️ Homebrew + 15+ premium development tools\n- 🤖 Blipee automation system with 3-level intelligent cleanup\n- 🎨 VS Code setup with 20+ professional extensions\n- ⚡ Enhanced shell with 60+ aliases and modern CLI tools\n- 🔄 Multi-workstation sync capability\n- 🛡️ Strict quality enforcement (95% coverage, 100% test pass)\n- 📚 Comprehensive documentation and quick reference\n\nReady for deployment across multiple workstations!\n\n🚀 Generated with Claude Code\nCo-Authored-By: Claude <noreply@anthropic.com>\")",
      "Bash(gh auth:*)",
      "Bash(bash:*)",
      "Bash(tree:*)",
      "Bash(find:*)",
      "Bash(/Users/pedro/Documents/pedro-dev-environment/scripts/verify-setup.sh:*)",
      "Bash(git -C /Users/pedro/Documents/pedro-dev-environment add scripts/verify-setup.sh GITHUB_SETUP.md)",
      "Bash(git -C /Users/pedro/Documents/pedro-dev-environment commit -m \"✨ Add verification script and GitHub setup instructions\n\n- 🧪 verify-setup.sh: Comprehensive pre-deployment testing\n- 📚 GITHUB_SETUP.md: Step-by-step GitHub repository creation\n- 🛡️ Platform compatibility and tool availability checks\n- 📋 Repository structure validation\n- 🎯 Ready for GitHub deployment\n\n🚀 Generated with Claude Code\nCo-Authored-By: Claude <noreply@anthropic.com>\")",
      "Bash(brew install:*)",
      "Bash(/Users/pedro/Documents/pedro-dev-environment/scripts/deploy-to-github.sh:*)",
      "Bash(git -C /Users/pedro/Documents/pedro-dev-environment commit -m \"📚 Complete documentation update and GitHub URL corrections\n\n✨ Comprehensive documentation suite completed:\n- 📋 Updated all GitHub URLs to blipee-dev username\n- 📚 Added complete documentation status report\n- 🚀 Copy-paste deployment instructions for blipee-dev\n- 📖 Complete automation system documentation included\n- 🎯 Professional-quality formatting across all 18+ files\n\nDocumentation now includes:\n- 🎯 Marketing-style README with clear value proposition\n- 📚 Comprehensive setup guide with troubleshooting\n- 🤖 Complete automation system documentation\n- ⚡ Quick reference for daily commands\n- 🔧 Multiple deployment options (interactive, manual, copy-paste)\n- 🧪 Verification and testing scripts\n\nReady for professional deployment and team sharing!\n\n🚀 Generated with Claude Code\nCo-Authored-By: Claude <noreply@anthropic.com>\")",
      "Bash(git -C /Users/pedro/Documents/pedro-dev-environment push origin main)",
      "Bash(npm run supabase:status:*)",
      "Bash(echo $PATH)",
      "Bash(export:*)",
      "Bash(supabase login:*)",
      "Bash(supabase link:*)",
      "Bash(node:*)",
      "Bash(npm install)",
      "Bash(npm install:*)",
      "Bash(npm run dev:*)",
      "Bash(curl:*)",
      "Bash(supabase db push:*)",
      "Bash(npx supabase db push:*)",
      "Bash(/Users/pedro/Documents/blipee/blipee-toolpad/automation/blipee status)",
      "Bash(/Users/pedro/Documents/blipee/blipee-toolpad/automation/blipee start)",
      "Bash(sudo ln:*)",
      "Bash(pgrep:*)",
      "Bash(brew:*)",
      "Bash(ls:*)",
      "Bash(npm outdated)",
      "Bash(npm audit:*)",
      "Bash(npm uninstall:*)",
      "Bash(npm update:*)",
      "Bash(npm run type-check:*)",
      "Bash(npm run build:*)",
      "Bash(npm test:*)",
      "Bash(npx eslint:*)",
      "Bash(mv:*)",
      "Bash(rm:*)",
      "Bash(npm run lint)",
      "Bash(npm run lint:*)",
      "Bash(timeout 10s npm run dev)",
      "Bash(true)",
      "Bash(rg:*)",
      "Bash(npx tsc:*)",
      "mcp__ide__getDiagnostics",
      "Bash(touch:*)",
      "Bash(npx vercel:*)",
      "Bash(VERCEL_TOKEN=\"mANq9GUswQn2nhoJyHgm4bsz\" VERCEL_ORG_ID=\"8wN9zoTgbygcSTVmfuYfh6TD\" npx vercel link --yes)",
      "Bash(VERCEL_TOKEN=\"mANq9GUswQn2nhoJyHgm4bsz\" VERCEL_ORG_ID=\"8wN9zoTgbygcSTVmfuYfh6TD\" npx vercel link --yes --token=\"mANq9GUswQn2nhoJyHgm4bsz\")",
      "Bash(./scripts/test-deployment.sh:*)",
      "Bash(NODE_ENV=production npm run build)",
      "Bash(git add:*)",
      "Bash(gh run list:*)",
      "Bash(vercel logs:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(git checkout:*)",
      "Bash(git cherry-pick:*)",
      "Bash(git merge:*)",
      "Bash(npm run typecheck:*)",
      "Bash(./fix-eslint.sh:*)"
    ],
    "deny": []
  }
}